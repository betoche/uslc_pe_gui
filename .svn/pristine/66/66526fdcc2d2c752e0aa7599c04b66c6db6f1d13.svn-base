package com.uslc.gui;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;

import com.uslc.po.jpa.test.UslcJpaManager;

public class LiveDataAccess {
	private final String propsFileName = "config/database.properties";
	
	private String dbHost = "";
	private String dbName = "";
	private int dbPort = 0;
	private String dbUser = "";
	private String dbPassword = "";
	private String jdbcDriver = "";
	
	private UslcJpaManager uslcData = null;
	
	private Logger log = null;
	
	public LiveDataAccess() {
		InputStream input = null;
		Properties props = null;
		try {
			input = new FileInputStream( new File( propsFileName ) );
			props = new Properties();
			props.load(input);
			
			dbHost = props.getProperty( "db-host", "db" ).trim();
			dbName = props.getProperty( "db-name", "uslc").trim();
			dbPort = Integer.parseInt(props.getProperty( "db-port", "3306").trim() );
			dbUser = props.getProperty( "db-user", "root").trim();
			dbPassword = props.getProperty( "db-pass", "").trim();
			jdbcDriver = props.getProperty( "jdbc-driver", "com.mysql.jdbc.Driver" ).trim();
		} catch (FileNotFoundException e) {
			getLog().error( "constructor", e );
		} catch (IOException e) {
			getLog().error( "constructor", e );
		} finally {
			try {
				input.close();
			} catch (IOException e) {
				getLog().error( "constructor", e );
			}
		}
	}
	
	public String getDbHost() {
		return dbHost;
	}
	public String getDbName() {
		return dbName;
	}
	public int getDbPort() {
		return dbPort;
	}
	public String getDbUser() {
		return dbUser;
	}
	public String getDbPassword() {
		return dbPassword;
	}
	public String getJdbcDriver() {
		return jdbcDriver;
	}
	public UslcJpaManager getUslcData() {
		if( uslcData == null ) {
			uslcData = new UslcJpaManager(getDbHost(), getDbPort(), getDbName(), getDbUser(), getDbPassword(), getJdbcDriver() );
		}
		return uslcData;
	}

	private Logger getLog() {
		if( log == null ) {
			log = Logger.getLogger( LiveDataAccess.class );
			PropertyConfigurator.configure( "log4j.properties" );
		}
		return log;
	}
}
