package com.uslc.gui;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;

public class TicketPrinterPlatform {
	private final String propsFileName = "config/printing.properties";
	
	private int defaultNumberOfCopies = 0;
	private String defaultPrinterName = "";
	private boolean showPrintDialog = false;
	private boolean autoPrint = false;
	
	private String[] customLabelFiles = null;

	private String preticketedLabelFile = "";
	private String noPreticketedLabelFile = "";
	
	private String stickerLabelFile = "";
	
	private String blankLabelFile = "";
	private String blankStickerLabelFile = "";
	
	private Logger log = null;
	
	public TicketPrinterPlatform() {
		InputStream input = null;
		Properties props = null;
		try {
			input = new FileInputStream( new File( propsFileName ) );
			props = new Properties();
			props.load(input);
			
			defaultNumberOfCopies = Integer.parseInt( props.getProperty( "number-of-copies", "1").trim() );
			defaultPrinterName = props.getProperty( "defaul-printer-name", "" ).trim();
			showPrintDialog = Boolean.getBoolean( props.getProperty( "show-print-dialog", "false" ).trim() );
			autoPrint = Boolean.getBoolean( props.getProperty( "auto-print", "true" ).trim() );
			
			customLabelFiles = props.getProperty( "custom-label-files", "" ).trim().split( "|" );
			
			preticketedLabelFile = props.getProperty( "preticketed-label-file", "reports/carton_ticket_preticketed.jrxml" ).trim();
			noPreticketedLabelFile = props.getProperty( "no-preticketed-label-file", "reports/carton_ticket_no_preticketed.jrxml" ).trim();
			
			stickerLabelFile = props.getProperty( "sticker-label-file", "reports/polybag_sticker.jrxml" ).trim();
			
			blankLabelFile = props.getProperty( "blank-label-file", "reports/blank_page.jrxml" ).trim();
			blankStickerLabelFile = props.getProperty( "blank-sticker-file", "reports/blank_polybag_sticker.jrxml" );
		} catch (FileNotFoundException e) {
			getLog().error( "constructor", e );
		} catch (IOException e) {
			getLog().error( "constructor", e );
		} finally {
			try {
				input.close();
			} catch (IOException e) {
				getLog().error( "constructor", e );
			}
		}
	}

	public int getDefaultNumberOfCopies() {
		return defaultNumberOfCopies;
	}
	public String getDefaultPrinterName() {
		return defaultPrinterName;
	}
	public boolean isShowPrintDialog() {
		return showPrintDialog;
	}
	public boolean isAutoPrint() {
		return autoPrint;
	}
	public String[] getCustomLabelFiles() {
		return customLabelFiles;
	}
	public String getPreticketedLabelFile() {
		return preticketedLabelFile;
	}
	public String getNoPreticketedLabelFile() {
		return noPreticketedLabelFile;
	}
	public String getStickerLabelFile() {
		return stickerLabelFile;
	}
	public String getBlankLabelFile() {
		return blankLabelFile;
	}
	public String getBlankStickerLabelFile() {
		return blankStickerLabelFile;
	}

	private Logger getLog() {
		if( log == null ) {
			log = Logger.getLogger( TicketPrinterPlatform.class );
			PropertyConfigurator.configure( "log4j.properties" );
		}
		return log;
	}
}
